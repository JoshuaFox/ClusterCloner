name: Docker Image CI

on:
  push:
    branches:
      - '*'
    tags:
      - '*'

jobs:

  build:

    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v1

      - name: decide on tag
        id: decide_tag
        run: |
          image_tag=$(echo $GITHUB_REF | sed -e 's/refs\/heads\///g' -e 's/refs\/tags\///g' | sed -e 's/master/latest/g')
          echo ::set-output name=image_tag::${image_tag}
          echo "::debug::docker image tag ${image_tag}"

      - name: decide on image name
        id: decide_name
        env:
          DOCKER_REPOSITORY: ${{ secrets.DOCKER_REPOSITORY }}
        run: |
          image_name=${DOCKER_REPOSITORY}
          if [ -z "$image_name" ]; then image_name=${GITHUB_REPOSITORY}; fi
          echo ::set-output name=image_name::${image_name}
          echo "::debug::docker image name ${image_name}"

      - name: build image
        env:
          DOCKER_BUILDKIT: 1
          AWS_CREDENTIALS_BASE64: ${{secrets.AWS_CREDENTIALS_BASE64}}
          AZ_ENV_BASE64: ${{secrets.AZ_ENV_BASE64}}
          GCP_CLUSTER_MANAGER_KEYJSON_BASE64: ${{secrets.GCP_CLUSTER_MANAGER_KEYJSON_BASE64}}
          IMAGE_NAME: ${{ steps.decide_name.outputs.image_name }}
          IMAGE_TAG: ${{ steps.decide_tag.outputs.image_tag }}
        run: |
          echo AWS_CREDENTIALS_BASE64 |  base64 --decode > awscredentials
          echo $GCP_CLUSTER_MANAGER_KEYJSON_BASE64 |  base64 --decode > credentials-cluster-manager.json
          echo $AZ_ENV_BASE64 |  base64 --decode > ".env"
          echo "IMAGE_NAME: ${IMAGE_NAME}"
          docker build --tag ${IMAGE_NAME}:${IMAGE_TAG} .

      - name: push image
        env:
          DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
          GCR_PUSHER_KEYJSON_BASE64: ${{secrets.GCR_PUSHER_KEYJSON_BASE64}}
          IMAGE_NAME: ${{ steps.decide_name.outputs.image_name }}
          IMAGE_TAG: ${{ steps.decide_tag.outputs.image_tag }}
        run: |
          echo $GCR_PUSHER_KEYJSON_BASE64 | base64 --decode > account.json
          docker login -u _json_key --password-stdin ${DOCKER_REGISTRY}  < account.json
          docker push ${IMAGE_NAME}:${IMAGE_TAG}
          docker logout